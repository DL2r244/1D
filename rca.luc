// A ripple-carry-adder combinational logic unit
module rca #(
    SIZE ~ 32 : SIZE > 1 // SIZE is the parameter for specifying the number of bits
)(
    input a[SIZE], // Input 'a' is SIZE bits wide
    input b[SIZE], // Input 'b' is SIZE bits wide
    input cin, // carry-in signal
    output cout, // carry-out signal
    output s[SIZE] // output sum is SIZE bits wide
) {
    fa fa[SIZE];
    
    always {
        // implement ripple-carry-adder logic here 
        // cout = 0
        // s = 0 
        
        fa.a = a
        fa.b = b
        fa.cin = 0;
        
        repeat(i, SIZE) {
            if (i==0) {
                fa.cin[0] = cin
            } else {
                fa.cin[i] = fa.cout[i-1]
            }
        }
        s = fa.s;
        cout = fa.cout
               
    }
}